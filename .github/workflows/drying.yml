# name: DRYing code

# on:
#   push:
#     branches:
#       - main

# jobs:
#   Test:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Clone Repo
#         uses: actions/checkout@v4

#       - name: Print Working Directory
#         run: |
#           pwd
#           ls
#           ls -a
      
#       - name: Read Environment Variables from JSON
#         run: |
#           VARIABLES=$(cat /home/runner/work/kubernetes/kubernetes/env.json | jq -r 'to_entries | map("\(.key)=\(.value | tostring)") | .[]')

#           # Set the environment variables
#           echo "$VARIABLES" >> $GITHUB_ENV

#       - name: Use Environment Variables
#         run: |
#           for var in "${!IMAGE_@}"; do
#             echo "Variable from JSON file: $var=${!var}"
#           done


      # - name: Use Environment Variables
      #   run: |
      #     echo "Variable from JSON file: $IMAGE_1 $IMAGE_2"



name: DRYing code

on:
  push:
    branches:
      - main

jobs:
  Test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    # - name: Read variables from JSON file
    #   id: read-env
    #   run: |
    #     ENVIRONMENT=$(cat /home/runner/work/kubernetes/kubernetes/env.json | jq -r '.')
    #     for key in $(echo "${ENVIRONMENT}" | jq -r "keys[]" ); do
    #       echo "::set-output name=$key::$(echo $ENVIRONMENT | jq -r ".$key")"
    #     done

    # - name: Pull Docker images
    #   run: |
    #     IMAGES=("${{ env.IMAGES }}")
    #     PLATFORM="${{ env.platform }}"
    #     for image in "${IMAGES[@]}"; do
    #       echo "Pulling image: $image for platform: $PLATFORM"
    #     done


    - name: Read variables from JSON file
      id: read-env
      run: |
        ENVIRONMENT=$(cat /home/runner/work/kubernetes/kubernetes/env.json)
        echo "::set-output name=environment::$ENVIRONMENT"

    - name: Pull Docker images
      run: |
        ENVIRONMENT="${{ steps.read-env.outputs.environment }}"
        IMAGES=($(echo "$ENVIRONMENT" | jq -r '.images[]'))
        PLATFORM=$(echo "$ENVIRONMENT" | jq -r '.platform')
        for image in "${IMAGES[@]}"; do
          echo "Pulling image: $image for platform: $PLATFORM"
        done